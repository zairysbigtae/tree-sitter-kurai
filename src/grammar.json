{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "kurai",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "statement"
      }
    },
    "statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "let_statement"
        },
        {
          "type": "SYMBOL",
          "name": "function_decl"
        },
        {
          "type": "SYMBOL",
          "name": "for_loop"
        },
        {
          "type": "SYMBOL",
          "name": "while_loop"
        },
        {
          "type": "SYMBOL",
          "name": "function_call"
        },
        {
          "type": "SYMBOL",
          "name": "import"
        },
        {
          "type": "SYMBOL",
          "name": "attribute"
        }
      ]
    },
    "attribute": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "attribute_item"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "attribute_item": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "FIELD",
                  "name": "args",
                  "content": {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "identifier"
                          },
                          {
                            "type": "REPEAT",
                            "content": {
                              "type": "SEQ",
                              "members": [
                                {
                                  "type": "STRING",
                                  "value": ","
                                },
                                {
                                  "type": "SYMBOL",
                                  "name": "identifier"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                },
                {
                  "type": "STRING",
                  "value": ")"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "let_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "let_kw",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "STRING",
              "value": "let"
            },
            "named": true,
            "value": "keyword"
          }
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "for_loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "for_kw",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "STRING",
              "value": "for"
            },
            "named": true,
            "value": "keyword"
          }
        },
        {
          "type": "FIELD",
          "name": "variable",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "in_kw",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "STRING",
              "value": "in"
            },
            "named": true,
            "value": "keyword"
          }
        },
        {
          "type": "FIELD",
          "name": "range",
          "content": {
            "type": "SYMBOL",
            "name": "range_expr"
          }
        }
      ]
    },
    "while_loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "while_kw",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "STRING",
              "value": "while"
            },
            "named": true,
            "value": "keyword"
          }
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "range_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "start",
            "content": {
              "type": "SYMBOL",
              "name": "number"
            }
          },
          {
            "type": "STRING",
            "value": ".."
          },
          {
            "type": "FIELD",
            "name": "end",
            "content": {
              "type": "SYMBOL",
              "name": "number"
            }
          }
        ]
      }
    },
    "import": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "use"
        },
        {
          "type": "SYMBOL",
          "name": "path"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "path": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "::"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "function_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "fn_kw",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "STRING",
              "value": "fn"
            },
            "named": true,
            "value": "keyword"
          }
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "function_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "binary_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "PATTERN",
            "value": "[<>=!]=?|=="
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expr"
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "statement"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+"
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "string": {
      "type": "PATTERN",
      "value": "\"[^\"]*\""
    },
    "keyword": {
      "type": "PREC",
      "value": -1,
      "content": {
        "type": "STRING",
        "value": "keyword"
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}